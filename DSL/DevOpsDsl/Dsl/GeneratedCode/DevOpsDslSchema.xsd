<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="DevOpsDslSchema" targetNamespace="http://schemas.microsoft.com/dsltools/DevOpsDsl" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/DevOpsDsl" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- Application -->
  <xsd:element name="application" type="Application" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Application">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ApplicationHasContainers -->
          <xsd:element name="containers" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ApplicationHasContainers</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="applicationHasContainers" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ApplicationHasContainers needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ApplicationHasSre -->
          <xsd:element name="sre" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ApplicationHasSre</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="applicationHasSre" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ApplicationHasSre needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ApplicationName -->
        <xsd:attribute name="applicationName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Name of the Application</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: CloudProvider -->
        <xsd:attribute name="cloudProvider" type="CloudProvider" >
          <xsd:annotation>
            <xsd:documentation>Cloud provider that host the application</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ArchitecturalStyle -->
        <xsd:attribute name="architecturalStyle" type="ArchitecturalStyles" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Application Moniker -->
  <xsd:element name="applicationMoniker" type="ApplicationMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApplicationMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Application instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Container -->
  <xsd:element name="container" type="Container" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Container">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ContainerHasPracticed -->
          <xsd:element name="practiced" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ContainerHasPracticed</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="containerHasPracticed" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ContainerHasPracticed needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ContainerName -->
        <xsd:attribute name="containerName" type="xsd:string" />
        <!-- Property: ContainerType -->
        <xsd:attribute name="containerType" type="ContainerType" />
        <!-- Property: ContainerFramework -->
        <xsd:attribute name="containerFramework" type="DevelopmentFrameworks" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Container Moniker -->
  <xsd:element name="containerMoniker" type="ContainerMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ContainerMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Container instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Practice -->
  <xsd:element name="practice" type="Practice" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Practice">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: PracticeName -->
        <xsd:attribute name="practiceName" type="DevOpsPractices" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Practice Moniker -->
  <xsd:element name="practiceMoniker" type="PracticeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="PracticeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Practice instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Sre -->
  <xsd:element name="sre" type="Sre" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Sre">
    <xsd:annotation>
      <xsd:documentation>Site Reliability Engineering settings for the application</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: SreHasSLO -->
          <xsd:element name="sLO" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of SreHasSLO</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="sreHasSLO" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of SreHasSLO needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: SreName -->
        <xsd:attribute name="sreName" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Sre Moniker -->
  <xsd:element name="sreMoniker" type="SreMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="SreMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Sre instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SLO -->
  <xsd:element name="sLO" type="SLO" substitutionGroup="core:modelElement" />
  <xsd:complexType name="SLO">
    <xsd:annotation>
      <xsd:documentation>Service Level Objetive</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: SloName -->
        <xsd:attribute name="sloName" type="SLI" />
        <!-- Property: LowerBound -->
        <xsd:attribute name="lowerBound" type="xsd:double" />
        <!-- Property: UpperBound -->
        <xsd:attribute name="upperBound" type="xsd:double" />
        <!-- Property: Description -->
        <xsd:attribute name="description" type="xsd:string" />
        <!-- Property: Operator -->
        <xsd:attribute name="operator" type="ComparisonOperator" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SLO Moniker -->
  <xsd:element name="sLOMoniker" type="SLOMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="SLOMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for SLO instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApplicationHasContainers -->
  <xsd:element name="applicationHasContainers" type="ApplicationHasContainers" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApplicationHasContainers">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Container -->
          <xsd:element ref="container" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApplicationHasContainers Moniker -->
  <xsd:element name="applicationHasContainersMoniker" type="ApplicationHasContainersMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApplicationHasContainersMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApplicationHasContainers instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ContainerHasPracticed -->
  <xsd:element name="containerHasPracticed" type="ContainerHasPracticed" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ContainerHasPracticed">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Practice -->
          <xsd:element ref="practice" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ContainerHasPracticed Moniker -->
  <xsd:element name="containerHasPracticedMoniker" type="ContainerHasPracticedMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ContainerHasPracticedMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ContainerHasPracticed instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApplicationHasSre -->
  <xsd:element name="applicationHasSre" type="ApplicationHasSre" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApplicationHasSre">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Sre -->
          <xsd:element ref="sre" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApplicationHasSre Moniker -->
  <xsd:element name="applicationHasSreMoniker" type="ApplicationHasSreMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApplicationHasSreMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApplicationHasSre instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SreHasSLO -->
  <xsd:element name="sreHasSLO" type="SreHasSLO" substitutionGroup="core:modelElement" />
  <xsd:complexType name="SreHasSLO">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end SLO -->
          <xsd:element ref="sLO" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SreHasSLO Moniker -->
  <xsd:element name="sreHasSLOMoniker" type="SreHasSLOMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="SreHasSLOMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for SreHasSLO instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Enum CloudProvider -->
  <xsd:simpleType name="CloudProvider">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Azure">
        <xsd:annotation>
          <xsd:documentation>Microsft Azure</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AWS">
        <xsd:annotation>
          <xsd:documentation>Amazon Web Services</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GCP">
        <xsd:annotation>
          <xsd:documentation>Google Cloud Platform</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum NodeType -->
  <xsd:simpleType name="NodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Container"/>
      <xsd:enumeration value="Capability"/>
      <xsd:enumeration value="Application"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum ContainerType -->
  <xsd:simpleType name="ContainerType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="WebApplication"/>
      <xsd:enumeration value="Api"/>
      <xsd:enumeration value="MobilApp"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum ArchitecturalStyles -->
  <xsd:simpleType name="ArchitecturalStyles">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NTierApplication"/>
      <xsd:enumeration value="Microservices"/>
      <xsd:enumeration value="WebQueueWorker"/>
      <xsd:enumeration value="BigCompute"/>
      <xsd:enumeration value="BigData"/>
      <xsd:enumeration value="EventDriven"/>
      <xsd:enumeration value="EnumerationLiteral1"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum DevOpsPractices -->
  <xsd:simpleType name="DevOpsPractices">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ContinuousIntegration"/>
      <xsd:enumeration value="InfrastructureAsCode"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum DevelopmentFrameworks -->
  <xsd:simpleType name="DevelopmentFrameworks">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Java"/>
      <xsd:enumeration value="DotNet"/>
      <xsd:enumeration value="Spring"/>
      <xsd:enumeration value="NodeJS"/>
      <xsd:enumeration value="Python"/>
      <xsd:enumeration value="React"/>
      <xsd:enumeration value="VueJS"/>
      <xsd:enumeration value="Angular"/>
      <xsd:enumeration value="ReactNative"/>
      <xsd:enumeration value="Xcode"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum SLI -->
  <xsd:simpleType name="SLI">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RequestLatency">
        <xsd:annotation>
          <xsd:documentation>How long it takes to return a response to a request, in seconds</xsd:documentation>
          <xsd:documentation>How long it takes to return a response to a request, in seconds</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ErrorRate">
        <xsd:annotation>
          <xsd:documentation>Expressed as a fraction of all requests received</xsd:documentation>
          <xsd:documentation>Expressed as a fraction of all requests received</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SystemThroughput">
        <xsd:annotation>
          <xsd:documentation>Measured in requests per second (QPS)</xsd:documentation>
          <xsd:documentation>Measured in requests per second (QPS)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Availability">
        <xsd:annotation>
          <xsd:documentation>The fraction of the time that a service is usable</xsd:documentation>
          <xsd:documentation>The fraction of the time that a service is usable</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum ComparisonOperator -->
  <xsd:simpleType name="ComparisonOperator">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LessThan">
        <xsd:annotation>
          <xsd:documentation>Less than</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Between">
        <xsd:annotation>
          <xsd:documentation>Between</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GratherThan">
        <xsd:annotation>
          <xsd:documentation>Grater than</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  
</xsd:schema>

