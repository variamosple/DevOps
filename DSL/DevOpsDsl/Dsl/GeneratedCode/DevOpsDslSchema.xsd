<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="DevOpsDslSchema" targetNamespace="http://schemas.microsoft.com/dsltools/DevOpsDsl" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/DevOpsDsl" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- DevOps -->
  <xsd:element name="devOps" type="DevOps" substitutionGroup="core:modelElement" />
  <xsd:complexType name="DevOps">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: DevOpsHasApplications -->
          <xsd:element name="applications" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of DevOpsHasApplications</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="devOpsHasApplications" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of DevOpsHasApplications needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ModelName -->
        <xsd:attribute name="modelName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Model Name</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- DevOps Moniker -->
  <xsd:element name="devOpsMoniker" type="DevOpsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="DevOpsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for DevOps instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Application -->
  <xsd:element name="application" type="Application" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Application">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ApplicationHasContainers -->
          <xsd:element name="containers" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ApplicationHasContainers</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="applicationHasContainers" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ApplicationHasContainers needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ApplicationName -->
        <xsd:attribute name="applicationName" type="xsd:string" />
        <!-- Property: CloudProvider -->
        <xsd:attribute name="cloudProvider" type="CloudProvider" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Application Moniker -->
  <xsd:element name="applicationMoniker" type="ApplicationMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApplicationMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Application instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Container -->
  <xsd:element name="container" type="Container" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Container">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ContainerName -->
        <xsd:attribute name="containerName" type="xsd:string" />
        <!-- Property: DevSecOps -->
        <xsd:attribute name="devSecOps" type="xsd:boolean" >
          <xsd:annotation>
            <xsd:documentation>Implement DevSecOps practices to the current container</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ContinuousIntegration -->
        <xsd:attribute name="continuousIntegration" type="xsd:boolean" >
          <xsd:annotation>
            <xsd:documentation>Implement Continuous Integration practices to the current container</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ReleaseManagement -->
        <xsd:attribute name="releaseManagement" type="xsd:boolean" >
          <xsd:annotation>
            <xsd:documentation>Implement Release Management practices to the current container</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Container Moniker -->
  <xsd:element name="containerMoniker" type="ContainerMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ContainerMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Container instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- DevOpsHasApplications -->
  <xsd:element name="devOpsHasApplications" type="DevOpsHasApplications" substitutionGroup="core:modelElement" />
  <xsd:complexType name="DevOpsHasApplications">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Application -->
          <xsd:element ref="application" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- DevOpsHasApplications Moniker -->
  <xsd:element name="devOpsHasApplicationsMoniker" type="DevOpsHasApplicationsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="DevOpsHasApplicationsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for DevOpsHasApplications instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApplicationHasContainers -->
  <xsd:element name="applicationHasContainers" type="ApplicationHasContainers" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApplicationHasContainers">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Container -->
          <xsd:element ref="container" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApplicationHasContainers Moniker -->
  <xsd:element name="applicationHasContainersMoniker" type="ApplicationHasContainersMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApplicationHasContainersMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApplicationHasContainers instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Enum CloudProvider -->
  <xsd:simpleType name="CloudProvider">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Azure">
        <xsd:annotation>
          <xsd:documentation>Microsft Azure</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AWS">
        <xsd:annotation>
          <xsd:documentation>Amazon Web Services</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GCP">
        <xsd:annotation>
          <xsd:documentation>Google Cloud Platform</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum NodeType -->
  <xsd:simpleType name="NodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Container"/>
      <xsd:enumeration value="Capability"/>
      <xsd:enumeration value="Application"/>
    </xsd:restriction>
  </xsd:simpleType>
  
</xsd:schema>

